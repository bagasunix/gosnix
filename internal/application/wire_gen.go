// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package application

import (
	"github.com/bagasunix/gosnix/internal/infrastructure/http/handlers"
	"github.com/bagasunix/gosnix/internal/infrastructure/messaging/rabbitmq"
	"github.com/bagasunix/gosnix/internal/infrastructure/persistence/postgres"
	"github.com/bagasunix/gosnix/internal/infrastructure/persistence/redis_client"
	"github.com/bagasunix/gosnix/pkg/configs"
	"github.com/google/wire"
	"github.com/phuslu/log"
	"github.com/rabbitmq/amqp091-go"
	"github.com/redis/go-redis/v9"
	"gorm.io/gorm"
)

// Injectors from wire.go:

// Entry point buat bikin semua handler
func InitializeServiceHandler(db *gorm.DB, redis2 *redis.Client, rabbitConn *amqp091.Connection, logger *log.Logger, cfg *configs.Cfg) *HandlerContainer {
	repositories := postgres.New(logger, db)
	redisClient := redis_client.New(logger, redis2)
	rmqClient := rabbitmq.New(logger, rabbitConn)
	serviceHealthService := NewHealthService(repositories, redisClient, rmqClient)
	healthHandler := handlers.NewHealthHandler(serviceHealthService)
	serviceCustomerService := NewCustomerService(logger, redisClient, repositories, cfg)
	customerHandler := handlers.NewCustomerHandler(serviceCustomerService)
	handlerContainer := &HandlerContainer{
		Health:   healthHandler,
		Customer: customerHandler,
		Repo:     repositories,
	}
	return handlerContainer
}

// wire.go:

type HandlerContainer struct {
	Health   *handlers.HealthHandler
	Customer *handlers.CustomerHandler
	Repo     postgres.Repositories
}

var HealthSet = wire.NewSet(postgres.New, redis_client.New, rabbitmq.New, NewHealthService,
	NewCustomerService, handlers.NewHealthHandler, handlers.NewCustomerHandler,
)
